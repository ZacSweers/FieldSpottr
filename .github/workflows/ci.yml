name: CI

on:
  # Only run push on main
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  # Always run on PRs
  pull_request:
    branches: [ main ]
  merge_group:

concurrency:
  group: 'ci-${{ github.event.merge_group.head_ref || github.head_ref }}-${{ github.workflow }}'
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: '23'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build and run checks
        id: gradle-build
        run: |
          ./gradlew --quiet --continue --no-configuration-cache \
              check \
              assembleRelease \
              jvmJar

      - name: (Fail-only) Upload reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports-build
          path: |
            **/build/reports/**

  build-ios:
    # https://github.com/actions/runner-images/blob/main/images/macos
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          lfs: 'true'

      - name: Install JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: '23'

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Read Xcode version
        run: echo "XCODE_VERSION=$(cat .xcode-version)" >> $GITHUB_ENV

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - run: brew install swiftlint

      - name: Build iOS app
        run: bundle exec fastlane ios build
